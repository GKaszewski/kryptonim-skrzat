using System.Collections;
using UnityEngine;

public class InvulnerabilityEffect : MonoBehaviour {
    private Renderer _renderer;

    [SerializeField] private InvulnerabilityManager invulnerabilityManager;
    
    private void Awake() {
        _renderer = GetComponent<Renderer>();
        if (_renderer) return;
        _renderer = GetComponentInChildren<Renderer>();

        if (_renderer) return;
        Debug.LogError("Renderer component not found.");
    }

    private void Update() {
        if (!invulnerabilityManager || !_renderer) return;
        
        if (invulnerabilityManager.IsInvulnerable) {
            StartFlashingEffect();
        } else {
            StopFlashingEffect();
        }
    }

    private void StartFlashingEffect() {
        StartCoroutine(FlashEffect());
    }

    private void StopFlashingEffect() {
        StopAllCoroutines();
        _renderer.enabled = true;
    }

    private IEnumerator FlashEffect() {
        while (invulnerabilityManager.IsInvulnerable) {
            _renderer.enabled = !_renderer.enabled;
            yield return new WaitForSeconds(0.1f);
        }

        _renderer.enabled = true;
    }
}